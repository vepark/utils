data have;
  input filenames $200.;
  datalines;
filename.xlsx;filename1.xlsx;filename.xlsx
file1.xlsx; file2.xlsx; file1.xlsx;file3.xlsx
document.xlsx;
file 1.xlsx;file2.xlsx;file 1.xlsx; file3.xlsx;
;

data want;
  set have;
  length unique_filenames $200.;

  /* Initialize variables */
  unique_filenames = '';

  /* Remove trailing semicolon */
  if substr(filenames, length(filenames), 1) = ';' then
    filenames = substr(filenames, 1, length(filenames) - 1);

  do i = 1 to countw(filenames, ';');
    filename = scan(filenames, i, ';');
    /* Check if filename is already in unique_filenames, ignoring case and surrounding spaces */
    if indexw(unique_filenames, compress(filename, , 'ts')) = 0 then do; 
      /* If not, add it with a semicolon */
      if unique_filenames ne '' then unique_filenames = catx(';', unique_filenames, filename);
      else unique_filenames = filename; /* First filename, no need for semicolon */
    end;
  end;
run;






/* Sample data */
data have;
    input id $ values $50.;
    datalines;
1 doc1.xlsx, ABC doc1.xlsx
2 x;y;z;x;y
3 p,q,r,p,q,r
;
run;

/* Step 1: Split the values into separate observations */
data split (drop=values i);
    set have;
    length value $50;
    /* Loop through each value in the cell, separated by comma or semicolon */
    do i = 1 to countw(values, ',;');
        value = strip(scan(values, i, ',;'));
        /* Exclude missing values */
        if value ne '' then output;
    end;
run;

/* Step 2: Remove duplicates */
proc sort data=split noduprecs;
    by id value;
run;

/* Step 3: Recombine the unique values back into a single cell */
data want;
    length values $200; /* Adjust length as needed */
    retain id values;
    format values $200.;
    do until (last.id);
        set split;
        by id;
        if values = '' then values = value;
        else values = catx(',', values, value);
    end;
    output;
    keep id values;
run;

/* View the final dataset */
proc print data=want noobs;
run;
