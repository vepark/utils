filename filelist pipe "ls /path/to/input/directory/*";
/* Define a temporary dataset to hold file names */
data filenames;
    length file_path $256;
    infile filelist length=reclen;
    input file_path $varying256. reclen;
    /* Extract the file name from the path */
    file_name = scan(file_path, -1, '/');
run;
/* Keywords and their macro variable names */
%let keywords = abcd efg hijk lmnop qrst;
%let macro_vars = var_abcd var_efg var_hijk var_lmnop var_qrst;

data _null_;
    set filenames;
    
    /* Array for keywords and corresponding macro variable names */
    array keys[5] $10 _temporary_ ('*abcd*' '*efg*' '*hijk*' '*lmnop*' '*qrst*');
    array macro_vars[5] $20 _temporary_ ('var_abcd', 'var_efg', 'var_hijk', 'var_lmnop', 'var_qrst');
    
    /* Check each file against each keyword pattern */
    do i = 1 to 5;
        if index(file_name, keys[i]) then do;
            /* Assign the file name without extension to the macro variable */
            name_without_ext = prxchange('s/(\.[^\.]*)$//', -1, file_name); /* Remove the extension */
            call symputx(macro_vars[i], name_without_ext);
            
            /* If there's a second file for the same keyword */
            if symexist(cats('count_', macro_vars[i])) then do;
                count = symgetn(cats('count_', macro_vars[i])) + 1;
                call symputx(cats('count_', macro_vars[i]), count);
                
                /* Additional handling for multiple files */
                main_folder = scan(file_path, -2, '/');
                call symputx(cats('AdditionalArtifacts', main_folder), file_path);
            end;
            else call symputx(cats('count_', macro_vars[i]), 1);
        end;
    end;
run;











proc import datafile="mydata.xlsx"
    out=excel_data
    dbms=xlsx
    replace;
    sheet="Sheet1";
run;

proc transpose data=excel_data out=reshaped_data;
    var _all_;
run;

data _null_;
    set reshaped_data;
    if not missing(col1) then do;
        length clean_value $200;
        clean_value = compress(upcase(col1), , "kad");
        if clean_value ne "" then do;
            call symputx(clean_value, clean_value);
        end;
    end;
run;





%macro create_macro_vars(dataset, vars);
  %local var i count;

  proc sql noprint;
    %do i = 1 %to %sysfunc(countw(&vars));
      %let var = %scan(&vars, &i);
      select distinct &var 
        into :&var._1 - :&var._&sqlobs 
        from &dataset;
      %let count = &sqlobs;

      %do j = 1 %to &count;
        %put Macro variable &var._&j created with value &&&var._&j;
      %end;
    %end;
  quit;
%mend create_macro_vars;

/* Example usage */
%create_macro_vars(mydata, ID1 ID2);









%macro find_files_with_keywords(input_folder, keywords);
  %local keyword i file_count main_folder additional_artifacts;

  filename input_dir "&input_folder/*";

  %do i = 1 %to %sysfunc(countw(&keywords));
    %let keyword = %scan(&keywords, &i);

    data files;
      did = dopen('input_dir');
      if did > 0 then do;
        do while (not eof);
          infile = dread(did, _n_);
          if find(lowcase(infile), lowcase("&keyword")) then do;  /* Case-insensitive search */
            filename = scan(infile, -1, '\/');                   /* Get filename only */
            output;
          end;
        end;
      end;
      rc = dclose(did);
    run;

    %let file_count = &sqlobs; /* Count files found */

    proc sql noprint;
      select filename into :&keyword  
      from files;

      %if &file_count > 1 %then %do;
        select filename into :additional_artifacts separated by ' ' 
        from files;
        %let main_folder = %sysfunc(pathname(&input_folder)); 
      %end;
    quit;

    %if &file_count = 0 %then %put WARNING: No files found for keyword &keyword;
    %else %if &file_count = 1 %then %put Macro variable &keyword created with value &&&keyword;
    %else %do;
      %put WARNING: Multiple files found for keyword &keyword;
      %put Additional files stored in macro variable AdditionalArtifacts&keyword;
      %put Main folder stored in macro variable MainFolder&keyword;
    %end;
  %end;
%mend find_files_with_keywords;

/* Example usage */
%let input_folder = /path/to/your/input_folder; /* Update this with your actual path */
%let keywords = abcd efgh ijkl mnop qrst;

%find_files_with_keywords(&input_folder, &keywords);
