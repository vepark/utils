import os
import pandas as pd
from openpyxl import load_workbook

def process_excel_files(directory, output_file):
    all_data = pd.DataFrame()
    all_summary = pd.DataFrame()

    for filename in os.listdir(directory):
        if filename.endswith('.xlsx'):
            filepath = os.path.join(directory, filename)
            wb = load_workbook(filepath, data_only=True)
            prefix = get_prefix(wb)
            
            for sheet_name in wb.sheetnames:
                if sheet_name.isdigit() and len(sheet_name) == 3:
                    # Load the sheet with pandas using the openpyxl engine
                    df = pd.read_excel(filepath, sheet_name=sheet_name, engine='openpyxl', header=None)
                    # Specify columns by Excel letter columns
                    cols_to_use = range(2, 7) if sheet_name == '301' else range(2, 4)  # 0-based index, C=2, D=3, G=6
                    df = df.iloc[:, cols_to_use]
                    df.columns = ['C', 'D', 'E', 'F', 'G'] if sheet_name == '301' else ['C', 'D']
                    df = filter_rows(df)
                    df['REDA'] = prefix
                    df['SheetName'] = sheet_name
                    all_data = pd.concat([all_data, df], ignore_index=True)

                elif sheet_name == 'Summary':
                    df = pd.read_excel(filepath, sheet_name=sheet_name, engine='openpyxl', usecols="A:F", header=None)
                    df.columns = ['A', 'B', 'C', 'D', 'E', 'F']
                    df.dropna(how='all', inplace=True)
                    df['REDA'] = prefix
                    df['SheetName'] = 'Summary'
                    all_summary = pd.concat([all_summary, df], ignore_index=True)

    with pd.ExcelWriter(output_file) as writer:
        all_data.to_excel(writer, index=False, sheet_name='Combined_Criteria')
        all_summary.to_excel(writer, index=False, sheet_name='Combined_Summary')

def get_prefix(wb):
    try:
        summary_sheet = wb['Summary']
        return str(summary_sheet['B2'].value) if summary_sheet['B2'].value else 'NoPrefix'
    except KeyError:
        return 'NoSummarySheet'

def filter_rows(df):
    df = df[df['C'].str.endswith(':') == False]
    df = df[df['C'].str.startswith('Note:') == False]
    df['D'] = df['D'].apply(lambda x: x if not (str(x).startswith('[') and str(x).endswith(']')) else '')
    return df

# Example usage
directory_path = '/path/to/your/excel/files'
output_file_path = '/path/to/save/output/CombinedReport.xlsx'
process_excel_files(directory_path, output_file_path)
