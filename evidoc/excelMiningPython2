import os
import pandas as pd
from openpyxl import load_workbook
from pandas import ExcelWriter

def process_excel_files(directory, output_file):
    all_data = pd.DataFrame()
    all_summary = pd.DataFrame()

    for filename in os.listdir(directory):
        if filename.endswith('.xlsx'):
            filepath = os.path.join(directory, filename)
            wb = load_workbook(filepath, data_only=True)
            prefix = get_prefix(wb)

            for sheet_name in wb.sheetnames:
                if sheet_name.isdigit() and len(sheet_name) == 3:
                    if sheet_name == '301':
                        cols_to_use = "C:G"  # Excel labels for columns C through G
                    else:
                        cols_to_use = "C:D"  # Excel labels for columns C and D

                    # Read Excel using column index
                    df = pd.read_excel(filepath, sheet_name=sheet_name, engine='openpyxl', usecols=cols_to_use, header=None)
                    df.columns = ['C', 'D', 'E', 'F', 'G'][:len(df.columns)]  # Set column names
                    df = filter_rows(df)
                    df['REDA'] = prefix
                    df['SheetName'] = sheet_name
                    all_data = pd.concat([all_data, df], ignore_index=True)

                elif sheet_name == 'Summary':
                    df = pd.read_excel(filepath, sheet_name=sheet_name, engine='openpyxl', usecols="A:F", header=None)
                    df.columns = ['A', 'B', 'C', 'D', 'E', 'F']
                    df = df.dropna(how='all')
                    df['REDA'] = prefix
                    df['SheetName'] = 'Summary'
                    all_summary = pd.concat([all_summary, df], ignore_index=True)

    with ExcelWriter(output_file) as writer:
        all_data.to_excel(writer, index=False, sheet_name='Combined_Criteria')
        all_summary.to_excel(writer, index=False, sheet_name='Combined_Summary')

def get_prefix(wb):
    try:
        summary_sheet = wb['Summary']
        return str(summary_sheet['B2'].value) if summary_sheet['B2'].value else 'NoPrefix'
    except KeyError:
        return 'NoSummarySheet'

import pandas as pd

def filter_rows(df):
    # Ensure the columns are strings to avoid issues with non-string data
    df['C'] = df['C'].astype(str)
    df['D'] = df['D'].astype(str)

    # Apply filters safely, check for NaN explicitly
    df = df[~(df['C'].apply(lambda x: x.endswith(':') if pd.notna(x) else False))]
    df = df[~(df['C'].apply(lambda x: x.startswith('Note:') if pd.notna(x) else False))]
    df['D'] = df['D'].apply(lambda x: '' if pd.notna(x) and (x.endswith(']') and x.startswith('[') or x in ['YES/NO', 'PASS/NA']) else x)

    return df


# Example usage
directory_path = '/path/to/your/excel/files'
output_file_path = '/path/to/save/output/CombinedReport.xlsx'
process_excel_files(directory_path, output_file_path)
