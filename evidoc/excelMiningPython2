import os
import pandas as pd
from openpyxl import load_workbook
from pandas import ExcelWriter

def process_excel_files(directory, output_file):
    all_data = pd.DataFrame()
    all_summary = pd.DataFrame()

    # Process all Excel files in the directory
    for filename in os.listdir(directory):
        if filename.endswith('.xlsx'):
            filepath = os.path.join(directory, filename)
            wb = load_workbook(filepath, data_only=True)
            prefix = get_prefix(wb)

            for sheet_name in wb.sheetnames:
                try:
                    if sheet_name.isdigit() and len(sheet_name) == 3:
                        cols_to_use = "C:G" if sheet_name == '301' else "C:D"
                        df = pd.read_excel(filepath, sheet_name=sheet_name, engine='openpyxl', usecols=cols_to_use)
                        df = df.dropna(how='all')  # Remove rows where all cells are NaN
                        df = filter_rows(df)  # Apply row filters
                        df['REDA'] = prefix
                        df['SheetName'] = sheet_name
                        all_data = pd.concat([all_data, df], ignore_index=True)

                    elif sheet_name == 'Summary':
                        df = pd.read_excel(filepath, sheet_name=sheet_name, engine='openpyxl', usecols="A:F")
                        df = df.dropna(how='all')
                        df['REDA'] = prefix
                        df['SheetName'] = 'Summary'
                        all_summary = pd.concat([all_summary, df], ignore_index=True)
                except Exception as e:
                    print(f"Error processing sheet {sheet_name} in file {filename}: {str(e)}")

    # Writing results to an Excel file
    with ExcelWriter(output_file) as writer:
        all_data.to_excel(writer, index=False, sheet_name='Combined_Criteria')
        all_summary.to_excel(writer, index=False, sheet_name='Combined_Summary')
        generate_completion_results(all_data).to_excel(writer, index=False, sheet_name='Completion_Results')
        generate_missed_entries(all_data).to_excel(writer, index=False, sheet_name='Missed_Entries')

def get_prefix(wb):
    try:
        summary_sheet = wb['Summary']
        return str(summary_sheet['B2'].value) if summary_sheet['B2'].value else 'NoPrefix'
    except KeyError:
        return 'NoSummarySheet'

def filter_rows(df):
    df = df.dropna(subset=['C', 'D'], how='all')  # Remove rows where columns C and D are both NaN
    return df

def generate_completion_results(df):
    results = df.groupby('REDA').agg(
        TotalCounts=('REDA', 'size'),
        TotalEntries=('D', 'count')
    )
    results['Percent_Completion'] = (results['TotalEntries'] / results['TotalCounts'] * 100).round(2).astype(str) + '%'
    return results

def generate_missed_entries(df):
    missed_entries = df[df['D'].isna()]
    return missed_entries[['REDA', 'SheetName', 'C', 'D']]

# Example usage
directory_path = '/path/to/your/excel/files'
output_file_path = '/path/to/save/output/CombinedReport.xlsx'
process_excel_files(directory_path, output_file_path)
