%macro combineSheets(last4);
    %local i dataset_list dsid nobs;

    %let dataset_list = ;  %* Initialize the list of datasets to be combined;

    %do i = 301 %to 320;
        %let dsname = REDA&last4._&i;
        
        %* Check if the dataset exists and is not empty;
        %if %sysfunc(exist(&dsname)) %then %do;
            %let dsid = %sysfunc(open(&dsname));
            %let nobs = %sysfunc(attrn(&dsid, NOBS));
            %if &nobs > 0 %then %do;
                %let dataset_list = &dataset_list &dsname;
            %end;
            %let rc = %sysfunc(close(&dsid));
        %end;
    %end;

    %* Check if the dataset list is not empty;
    %if %length(%str(&dataset_list)) > 0 %then %do;
        data REDA&last4._combined;
            set &dataset_list;
        run;
    %end;
    %else %do;
        %put WARNING: No non-empty datasets found to combine for REDA&last4.;
    %end;
%mend combineSheets;

%combineSheets(1234);




%macro combineSheets(last4);
    %local i dataset_list;

    %* Initialize the list of datasets to be combined;
    %let dataset_list = ;

    %* Generate the list of dataset names for the set statement;
    %do i = 301 %to 320;
        %let dataset_list = &dataset_list REDA&last4._&i;
    %end;

    %* Remove the leading space from the dataset_list;
    %let dataset_list = %sysfunc(strip(&dataset_list));

    %* Create a single dataset combining all the specified datasets;
    data REDA&last4._combined;
        set &dataset_list;
    run;
%mend combineSheets;

%* Example of how to call the macro;
%combineSheets(1234);






%let list = '1234','2345','3456';  %* A list of quoted numbers;
%let value = '1234';  %* A value to find in the list;

%* The correct use of %INDEX, with only two arguments;
%let result = %index(&list, &value);

%put Result: &result;  %* This should print the position of '1234' in the list, or 0 if not found;







%let outlist = '1234';  %* Single item to check;
%let inlist = '1234','2345','3456';  %* List of items;

%* Ensure outlist is surrounded by quotes in the macro check;
%let formatted_outlist = %bquote('&) &outlist %bquote(');

%* Check if the formatted_outlist is part of inlist;
%if %index(&inlist, &formatted_outlist) > 0 %then %do;
    %put &formatted_outlist is in the list.;
%end;
%else %do;
    %put &formatted_outlist is not in the list.;
%end;
