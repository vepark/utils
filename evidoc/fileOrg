#!/bin/bash

# Define the root directory to search
SEARCH_DIR="/path/to/search/root"

# Define the output CSV file path
OUTPUT_CSV="/path/to/output/files_list.csv"

# Write the CSV header
echo "REDFolderName,INPUTsubfolderFileNames" > "$OUTPUT_CSV"

# Find all directories starting with RED and containing an INPUT folder
find "$SEARCH_DIR" -type d -name 'RED*' | while read -r red_folder; do
  if [ -d "$red_folder/INPUT" ]; then
    # Extract just the name of the RED folder
    red_folder_name=$(basename "$red_folder")

    # List all files in the INPUT subfolder, join with commas, avoid directories
    input_files=$(find "$red_folder/INPUT" -type f -exec basename {} \; | tr '\n' ',' | sed 's/,$//')

    # Only write to CSV if there are actual files
    if [ ! -z "$input_files" ]; then
      echo "$red_folder_name,\"$input_files\"" >> "$OUTPUT_CSV"
    fi
  fi
done





chmod +x list_files.sh
./list_files.sh


/* Import the CSV file created by the shell script */
proc import datafile="/path/to/output/files_list.csv"
    out=want
    dbms=csv
    replace;
    getnames=yes;
run;

/* Display the dataset */
proc print data=want;
run;














data processed;
    set want;
    
    length file1-file5 $256 Multiple_Files $3;
    array files[5] $256 file1-file5;
    array patterns[5] $50 _temporary_ ('.*abc.*123.*', '.*def.*456.*', 
                                       '.*ghi.*789.*', '.*jkl.*012.*', '.*mno.*345.*');
    array file_counts[5] _temporary_ (0, 0, 0, 0, 0);

    * Split the INPUTsubfolderFileNames into individual filenames;
    do i = 1 to countw(INPUTsubfolderFileNames, ',');
        filename = scan(INPUTsubfolderFileNames, i, ',');
        filename_no_ext = prxchange('s/\.[^\.]*$/', -1, filename);

        * Determine which keyword pattern the filename matches;
        do j = 1 to dim(patterns);
            if prxmatch(patterns[j], filename_no_ext) > 0 then do;
                file_counts[j] + 1;
                if file_counts[j] = 1 then files[j] = filename_no_ext;
                else Multiple_Files = "Yes";
            end;
        end;
    end;

    * Mark 'Multiple_Files' as 'No' if no column has multiple files;
    if not (Multiple_Files = "Yes") then Multiple_Files = "No";

    * Drop temporary iterating variables;
    drop i j filename filename_no_ext;
run;

proc print data=processed;
    title "Processed Dataset with Files Categorized by Pattern";
run;
