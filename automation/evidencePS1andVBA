param(
    [string]$DriveLetter,
    [string]$MainFolderNames,
    [string]$SubFolderPatterns,
    [string]$CsvOutputPath
)

# Hardcoded path component after the drive letter
$basePathSuffix = "\Your\Hardcoded\Path\After\DriveLetter"

# Construct the base path
$basePath = "${DriveLetter}:$basePathSuffix"

# Convert the comma-separated strings into arrays
$mainFoldersArray = $MainFolderNames -split ","
$subFoldersArray = $SubFolderPatterns -split ","

# Prepare an array to collect the results
$results = @()

foreach ($folderName in $mainFoldersArray) {
    $folderPath = Join-Path -Path $basePath -ChildPath $folderName.Trim()
    if (Test-Path $folderPath) {
        foreach ($subPattern in $subFoldersArray) {
            $subFolders = Get-ChildItem -Path $folderPath -Directory | Where-Object { $_.Name -like "*$subPattern*" }
            foreach ($subFolder in $subFolders) {
                # Process files within sub-folder as per your requirements
                $files = Get-ChildItem -Path $subFolder.FullName -File | Where-Object { $_.Name -like "*workbook*.xlsx" -or $_.Name -like "*evidence*.docx" }
                foreach ($file in $files) {
                    $results += [PSCustomObject]@{
                        MainFolder = $folderName
                        SubFolder = $subFolder.Name
                        FilePath = $file.FullName
                    }
                }
            }
        }
    }
}

# Export the results to CSV
$results | Export-Csv -Path $CsvOutputPath -NoTypeInformation -Encoding UTF8







Sub ImportCsvData(csvFilePath As String)
    Dim ws As Worksheet
    Dim lastRow As Long, i As Long
    Dim cell As Range

    ' Add a new worksheet
    Set ws = ThisWorkbook.Sheets.Add
    ws.Name = "PowerShell Results"

    ' Import the CSV data into the new worksheet
    With ws.QueryTables.Add("TEXT;" & csvFilePath, ws.Range("A1"))
        .TextFileParseType = xlDelimited
        .TextFileCommaDelimiter = True
        .Refresh
    End With

    ' Find the last row with data in Column A
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' Loop through each row and check cells for "NO FILES FOUND"
    For i = 1 To lastRow
        For Each cell In ws.Range("C" & i & ":E" & i) ' Assuming columns C, D, and E need to be checked
            If cell.Value = "NO FILES FOUND" Then
                cell.Interior.Color = RGB(255, 0, 0) ' Apply red color
            End If
        Next cell
    Next i

    ' Inform the user that data import is complete
    MsgBox "All done! Results have been entered into the sheet.", vbInformation
End Sub

