# Hardcoded values for the base path, main folders, and sub-folder patterns
$basePath = "C:\Your\Hardcoded\BasePath"
$mainFolders = @("MainFolder1", "MainFolder2")  # Adjust these to your actual folder names
$subFolderPatterns = @("SubFolderPattern1", "SubFolderPattern2")  # Adjust these to your actual patterns

# Initialize an array to collect the results
$results = @()

foreach ($subFolder in $subFolders) {
    # Reset the file lists for each sub-folder
    $workbookFilesList = @()
    $clearanceFilesList = @()
    $evidenceFilesList = @()

    # Collect files
    $files = Get-ChildItem -Path $subFolder.FullName -File -Recurse
    foreach ($file in $files) {
        if ($file.Name -like '*Prworkbook*.xlsx' -or $file.Name -like '*presworkbook*.xlsx' -or $file.Name -like '*Dworkbook*.xlsx' -or $file.Name -like '*eviworkbook*.xlsx') {
            $workbookFilesList += $file.Name
        }
        elseif ($file.Name -like '*clear*.msg') {
            $clearanceFilesList += $file.Name
        }
        elseif ($file.Name -match 'Evidence_Document_\d{4}\.xlsx') {
            $evidenceFilesList += $file.Name
        }
    }

    # Build strings and count information
    $workbooksStr = if ($workbookFilesList.Count -gt 0) { ($workbookFilesList -join ", ") + " (" + $workbookFilesList.Count + ")" } else { "NO FILES FOUND" }
    $clearanceStr = if ($clearanceFilesList.Count -gt 0) { ($clearanceFilesList -join ", ") + " (" + $clearanceFilesList.Count + ")" } else { "NO FILES FOUND" }
    $evidenceStr = if ($evidenceFilesList.Count -gt 0) { ($evidenceFilesList -join ", ") + " (" + $evidenceFilesList.Count + ")" } else { "NO FILES FOUND" }

    # Add the result object
    $results += [PSCustomObject]@{
        MainFolder = $mainFolder
        SubFolder = $subFolder.Name
        WorkbookFiles = $workbooksStr
        ClearanceFile = $clearanceStr
        EvidenceDocumentFile = $evidenceStr
    }
}


# Specify the CSV output path
$csvOutputPath = "C:\Path\To\output.csv"  # Update this path as necessary

# Export the results to a CSV file
$results | Export-Csv -Path $csvOutputPath -NoTypeInformation -Encoding UTF8
