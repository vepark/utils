/* Sample data */
data test;
    input match_flag $ value;
    datalines;
PASS 10
FAIL 20
PARTIALLY PASS 30
TOTAL FAIL 40
PASS WITH CONDITIONS 50
;
run;

/* Calculate summary statistics using PROC SQL */
proc sql;
    select 
        count(*) as total_count,
        sum(case when index(upcase(match_flag), 'FAIL') then 1 else 0 end) as fail_count
    into 
        :total_count,
        :fail_count
    from test;
quit;

%let pass_count = %eval(&total_count - &fail_count);

/* Determine summary message */
%macro generate_summary_message;
    %global summary_message;
    %if &fail_count = 0 %then %do;
        %let summary_message = 100% matches;
    %end;
    %else %do;
        %let summary_message = &fail_count fails out of &total_count;
    %end;
%mend generate_summary_message;

%generate_summary_message;

/* Macro to generate the report */
%macro generate_report;
    ods pdf file="report.pdf" style=journal bookmarkgen=yes;

    /* Print the summary message */
    ods proclabel "Summary";
    title "Summary of Match Results";
    footnote;
    proc report data=test(obs=1) nowd;
        columns match_flag value;
        define match_flag / noprint;
        define value / noprint;
        compute before;
            line "&summary_message";
        endcomp;
    run;

    /* Print the detailed report */
    ods proclabel "Detailed Report";
    title "Detailed Report";
    proc report data=test nowd;
        columns match_flag value;
        define match_flag / display 'Match Flag';
        define value / display 'Value';

        compute match_flag;
            if index(upcase(match_flag), 'PASS') then do;
                call define(_col_, 'style', 'style=[background=lightgreen]');
            end;
            else if index(upcase(match_flag), 'FAIL') then do;
                call define(_col_, 'style', 'style=[background=lightyellow]');
            end;
        endcomp;
    run;

    /* Print failed entries if any */
    %if &fail_count > 0 %then %do;
        ods proclabel "Failed Entries";
        title "Failed Entries";
        proc report data=test(where=(index(upcase(match_flag), 'FAIL'))) nowd;
            columns match_flag value;
            define match_flag / display 'Match Flag';
            define value / display 'Value';
        run;
    %end;

    ods pdf close;
    ods listing;
%mend generate_report;

/* Generate the report */
%generate_report;
