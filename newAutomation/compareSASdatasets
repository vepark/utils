/* Step 1: Identify Columns with Matching Criteria */
proc contents data=dataset1 out=contents1(keep=name type length) noprint;
run;

proc contents data=dataset2 out=contents2(keep=name type length) noprint;
run;

proc sql;
    create table matching_columns as
    select a.name as col1, b.name as col2, a.type as type1, b.type as type2
    from contents1 as a, contents2 as b
    where (a.length between 8 and 17) and (b.length between 8 and 17)
      and (index(upcase(a.name), '_ID') > 0 or index(upcase(a.name), '_NO') > 0 or index(upcase(a.name), '_NUMBER') > 0)
      and (index(upcase(b.name), '_ID') > 0 or index(upcase(b.name), '_NO') > 0 or index(upcase(b.name), '_NUMBER') > 0);
quit;

/* Step 2: Extract the First Matching Key Columns */
data _null_;
    set matching_columns;
    if _n_ = 1 then do;
        call symputx('key1', col1);
        call symputx('key2', col2);
        call symputx('type1', type1);
        call symputx('type2', type2);
    end;
run;

/* Step 3: Convert Key Columns to Character for Comparison */
data dataset1_mod;
    set dataset1;
    if &type1 = 1 then key1_mod = put(&key1, $20.);
    else key1_mod = &key1;
run;

data dataset2_mod;
    set dataset2;
    if &type2 = 1 then key2_mod = put(&key2, $20.);
    else key2_mod = &key2;
run;

/* Step 4: Perform the Comparison */
proc sql;
    create table comparison as
    select a.key1_mod as key1_value, b.key2_mod as key2_value,
           case when a.key1_mod = b.key2_mod then 1 else 0 end as match_flag
    from dataset1_mod as a
    full join dataset2_mod as b
    on a.key1_mod = b.key2_mod;
quit;

/* Calculate the total matches and match percentage */
proc sql;
    select sum(match_flag) as match_count, 
           count(*) as total_count,
           calculated match_count / calculated total_count as match_percentage format=percent8.2
    into :match_count, :total_count, :match_percentage
    from comparison;
quit;

%put Match Count: &match_count;
%put Total Count: &total_count;
%put Match Percentage: &match_percentage;

/* Step 5: Filter for 90% or More Matches */
data final_matches;
    set comparison;
    if match_flag = 1 then output;
run;

/* Check if match percentage is 90% or more */
%macro check_match_percentage;
    %if &match_percentage >= 0.90 %then %do;
        proc print data=final_matches;
            title "Rows with Matching Key Columns (&key1 and &key2)";
        run;
    %end;
    %else %do;
        %put The match percentage is less than 90%;
    %end;
%mend;

%check_match_percentage;
