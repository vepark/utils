# Define the folder path, sheet name, and output file name
$folderPath = "path\to\your\folder"  # Replace with the path to your folder
$sheetName = "Monitoring Criteria"
$outputFile = "combined.xlsx"
$reportFile = "missing_sheets_report.txt"

# Import the ImportExcel module
Import-Module ImportExcel

# Initialize an empty array to hold data
$data = @()
$missingFiles = @()
$headerSaved = $false

# Loop through each file in the folder
Get-ChildItem -Path $folderPath -Filter *.xlsx | ForEach-Object {
    $file = $_.FullName
    try {
        # Read the specified sheet
        $sheetData = Import-Excel -Path $file -WorksheetName $sheetName

        if ($sheetData -ne $null) {
            # Add filename as the first column
            $sheetData | ForEach-Object {
                $_ | Add-Member -MemberType NoteProperty -Name "Filename" -Value $file -Force
            }
            if (-not $headerSaved) {
                # If it's the first file, save the header
                $data += $sheetData
                $headerSaved = $true
            } else {
                # If it's not the first file, skip the header
                $data += $sheetData | Select-Object -Skip 1
            }
        }
    } catch {
        # Add to missing files report if the sheet is not found
        $missingFiles += $file
    }
}

# Remove empty rows based on the Filename column
$data = $data | Where-Object { $_.Filename -ne $null }

# Export the combined data to a new Excel file
$data | Export-Excel -Path $outputFile -WorksheetName "CombinedData" -AutoSize

# Generate a report of missing files
if ($missingFiles.Count -gt 0) {
    $missingFiles | Out-File -FilePath $reportFile
    Write-Host "The following files did not contain the specified sheet and are listed in $reportFile"
} else {
    Write-Host "All files contained the specified sheet."
}

Write-Host "Combined file saved as $outputFile"













Sub CombineExcelFiles()
    Dim folderPath As String
    Dim fileName As String
    Dim ws As Worksheet
    Dim newWs As Worksheet
    Dim wsData As Worksheet
    Dim lastRow As Long
    Dim newRow As Long
    Dim colCount As Integer
    Dim header As Boolean

    ' Set the folder path and initialize variables
    folderPath = "C:\path\to\your\folder\" ' Change this to your folder path
    fileName = Dir(folderPath & "*.xlsx")
    header = False
    newRow = 1

    ' Add a new worksheet for the combined data
    Set newWs = ThisWorkbook.Sheets.Add
    newWs.Name = "CombinedData"

    ' Loop through each file in the folder
    Do While fileName <> ""
        ' Open the workbook
        Workbooks.Open folderPath & fileName
        Set ws = ActiveWorkbook.Sheets("Monitoring Criteria")

        ' Check if the sheet exists
        On Error Resume Next
        Set wsData = ActiveWorkbook.Sheets("Monitoring Criteria")
        On Error GoTo 0

        If Not wsData Is Nothing Then
            ' Copy the data
            With wsData
                colCount = .Cells(1, .Columns.Count).End(xlToLeft).Column
                lastRow = .Cells(.Rows.Count, "A").End(xlUp).Row

                ' Add the header from the first file
                If Not header Then
                    newWs.Range(newWs.Cells(1, 2), newWs.Cells(1, colCount + 1)).Value = .Range(.Cells(1, 1), .Cells(1, colCount)).Value
                    newWs.Cells(1, 1).Value = "Filename"
                    header = True
                    newRow = 2
                End If

                ' Add the data to the combined sheet
                newWs.Range(newWs.Cells(newRow, 2), newWs.Cells(newRow + lastRow - 2, colCount + 1)).Value = .Range(.Cells(2, 1), .Cells(lastRow, colCount)).Value
                newWs.Range(newWs.Cells(newRow, 1), newWs.Cells(newRow + lastRow - 2, 1)).Value = fileName
                newRow = newRow + lastRow - 1
            End With
        End If

        ' Close the workbook without saving
        ActiveWorkbook.Close SaveChanges:=False

        ' Move to the next file
        fileName = Dir
        Set wsData = Nothing
    Loop

    MsgBox "Data combined successfully!", vbInformation
End Sub
